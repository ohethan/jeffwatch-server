{"version":3,"sources":["ron.jpg","RetweetBody.js","Tweet.js","Reply.js","ComposeTweet.js","Failure.js","App.js","reportWebVitals.js","index.js"],"names":["RetweetBody","props","useState","parent","setParent","error","setError","fetchParent","id","a","fetch","method","credentials","result","json","resultJSON","author","body","useEffect","parentAuthor","parentBody","className","src","ron","alt","Tweet","isLiked","liked","setLiked","likeCount","likes","setLikes","type","retweetBody","retweetAuthor","parentId","retweetCount","isMine","onClick","unLikeHandler","likeHandler","retweetHandler","replyHandler","replyCount","showRepliesHandler","editHandler","deleteHandler","Date","createdAt","toLocaleString","Reply","showParentReplies","ComposeTweet","defaultValue","textVal","setTextVal","length","charCount","setCharCount","textRef","useRef","header","replyTo","postMessage","current","focus","value","onChange","e","target","maxLength","ref","cancelHandler","postHandler","Failure","failMessage","App","tweets","setTweets","detailView","setDetailView","setFailMessage","curSkip","setCurSkip","fetchingMore","setFetchingMore","fetchTweets","timer","setTimeout","clearTimeout","handleScroll","position","window","pageYOffset","max","document","documentElement","offsetHeight","URLSearchParams","skip","status","newTweets","oldTweets","addEventListener","passive","removeEventListener","resetDetailView","like","unLike","postTweet","tweet","JSON","stringify","scrollTo","deleteTweet","filter","t","editTweet","val","postEdit","content","postReply","showReplies","reply","someLikes","updatedAt","postRetweet","retweet","replies","sort","b","map","r","p","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f71cbdee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ron.3f604b14.jpg\";","import { useEffect, useState } from \"react\";\r\nimport ron from './ron.jpg'\r\n\r\nconst RetweetBody = props => {\r\n  const [parent, setParent] = useState({});\r\n  const [error, setError] = useState('');\r\n  \r\n  const fetchParent = async (id) => {\r\n    try {\r\n      const result = await fetch(`https://comp426-1fa20.cs.unc.edu/a09/tweets/${id}`, {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      });\r\n      const resultJSON =  await result.json();\r\n      \r\n      setParent({author: resultJSON.author, body: resultJSON.body});\r\n    } catch (error) {\r\n      setError('Retweet not found. It was most likely deleted :(');\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!props.parentAuthor || !props.parentBody) {\r\n      fetchParent(props.id);\r\n    }\r\n  }, [props.parentAuthor, props.parentBody, props.id, setParent, setError]);\r\n\r\n  return (\r\n    error ? \r\n      <div className=\"retweet\"><p className=\"retweetError\">{error}</p></div>\r\n    :\r\n    <div className=\"retweet\">\r\n      <div className=\"tweetHead\">\r\n      <img src={ron} className='pfp' alt=\"ron\" />\r\n        <h3>{props.parentAuthor ? props.parentAuthor : parent.author}</h3>\r\n      </div>\r\n      <div className=\"tweetBody\">\r\n        <p>{props.parentBody ? props.parentBody : parent.body}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RetweetBody;","import { useState } from \"react\";\r\nimport RetweetBody from \"./RetweetBody\";\r\nimport ron from './ron.jpg'\r\n\r\nconst Tweet = props => {\r\n  const [liked, setLiked] = useState(props.isLiked);\r\n  const [likes, setLikes] = useState(props.likeCount);\r\n\r\n  return (\r\n    <div className=\"tweet\">\r\n      <div className=\"tweetHead\">\r\n        <img src={ron} className='pfp' alt=\"ron\" />\r\n        <h3>{props.author}</h3>\r\n        {props.type === 'retweet' && <h3 className=\"rt\">retweeted</h3>}\r\n      </div>\r\n      <div className=\"tweetBody\">\r\n        <p>{props.body}</p>\r\n        {props.retweetBody && props.retweetAuthor && <RetweetBody parentAuthor={props.retweetAuthor} parentBody={props.retweetBody} />}\r\n        {props.type === 'retweet' && !props.retweetBody && <RetweetBody id={props.parentId} />}\r\n      </div>\r\n      <div className=\"tweetMenu\">\r\n        <div>\r\n          <span>&hearts; {likes}</span>\r\n          <span>↵ {props.retweetCount}</span>\r\n          {!props.isMine && (!liked ? \r\n            <button className=\"likeButton\" onClick={() => {props.likeHandler(); setLiked(!liked); setLikes(likes+1);}}>Like</button>\r\n          :\r\n            <button className=\"unLikeButton\" onClick={() => {props.unLikeHandler(); setLiked(!liked); setLikes(likes-1);}}>Unlike</button>)}\r\n          <button className=\"retweetButton\" onClick={props.retweetHandler}>Retweet</button>\r\n          <button className=\"replyButton\" onClick={props.replyHandler}>Reply</button>\r\n          {props.replyCount > 0 && \r\n            <button \r\n              className=\"repliesButton\"\r\n              onClick={props.showRepliesHandler}\r\n            >Show Replies {props.replyCount}</button>}\r\n          {props.isMine && <button className=\"editButton\" onClick={props.editHandler}>Edit</button>}\r\n          {props.isMine && <button className=\"deleteButton\" onClick={props.deleteHandler}>Delete</button>}\r\n        </div>\r\n        <p>{(new Date(props.createdAt)).toLocaleString()}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tweet;","import { useState } from 'react';\r\nimport ron from './ron.jpg'\r\n\r\nconst Reply = props => {\r\n  const [liked, setLiked] = useState(props.isLiked);\r\n  const [likes, setLikes] = useState(props.likeCount);\r\n\r\n  return (\r\n    <div className=\"reply\">\r\n      <div className=\"tweetHead\">\r\n        <img src={ron} className='pfp' alt=\"ron\" />\r\n        <h3>{props.author}</h3>\r\n      </div>\r\n      <div className=\"tweetBody\">\r\n        <p>{props.body}</p>\r\n      </div>\r\n      <div className=\"tweetMenu\">\r\n      <div>\r\n          <span>&hearts; {likes}</span>\r\n          <span>↵ {props.retweetCount}</span>\r\n          {!props.isMine && (!liked ? \r\n            <button className=\"likeButton\" onClick={() => {\r\n              props.likeHandler();\r\n              setLiked(!liked);\r\n              setLikes(likes+1);\r\n            }}>Like</button>\r\n          :\r\n            <button className=\"unLikeButton\" onClick={() => {\r\n              props.unLikeHandler(); \r\n              setLiked(!liked); \r\n              setLikes(likes-1);\r\n            }}>Unlike</button>)}\r\n          <button className=\"retweetButton\" onClick={props.retweetHandler}>Retweet</button>\r\n          <button className=\"replyButton\" onClick={props.replyHandler}>Reply</button>\r\n          {props.replyCount > 0 && \r\n            <button \r\n              className=\"repliesButton\"\r\n              onClick={props.showRepliesHandler}\r\n            >Show Replies {props.replyCount}</button>}\r\n          {props.isMine && <button className=\"editButton\" onClick={props.editHandler}>Edit</button>}\r\n          {props.isMine && <button className=\"deleteButton\" onClick={async () => {await props.deleteHandler(); props.showParentReplies();}}>Delete</button>}\r\n        </div>\r\n        <p>{(new Date(props.createdAt)).toLocaleString()}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reply;","import { useEffect, useState, useRef } from \"react\";\r\nimport RetweetBody from './RetweetBody'\r\n\r\nconst ComposeTweet = props => {\r\n  const [textVal, setTextVal] = new useState(props.defaultValue);\r\n  const [charCount, setCharCount] = new useState(textVal.length);\r\n  const textRef = useRef(null);\r\n\r\n  let header = 'New Tweet';\r\n\r\n  if (props.replyTo && props.postMessage === 'Reply!') {\r\n    header = `Reply to ${props.replyTo}`;\r\n  } else if (props.replyTo && props.postMessage === 'Retweet!') {\r\n    header = `Retweet ${props.replyTo}`;\r\n  } else if (props.postMessage === 'Edit!') {\r\n    header = `Edit Tweet`;\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    textRef.current.focus();\r\n  }, [textRef]);\r\n\r\n  return (\r\n    <div className={props.postMessage === 'Reply!' ? 'reply' : 'tweet'}>\r\n      <h3 className=\"composeHeader\">{header}</h3>\r\n      <textarea \r\n        className=\"composeTextArea\" \r\n        value={textVal} onChange={(e) => {\r\n          setTextVal(e.target.value);\r\n          setCharCount(e.target.value.length);\r\n        }}\r\n        maxLength='280'\r\n        ref={textRef}\r\n      ></textarea>\r\n      {props.retweetBody && props.retweetAuthor && <RetweetBody parentAuthor={props.retweetAuthor} parentBody={props.retweetBody} />}\r\n      <div className=\"composeMenu\">\r\n        <span>{charCount}/280</span>\r\n        <div>\r\n          <button onClick={props.cancelHandler}>Cancel</button>\r\n          <button className=\"postButton\" onClick={() => props.postHandler(textVal)}>{props.postMessage}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ComposeTweet;","const Failure = props => {\r\n  return (\r\n    <div className=\"fail\">\r\n      <h1>{props.failMessage}</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Failure;","import './App.css';\nimport { useEffect, useState } from \"react\";\nimport Tweet from './Tweet';\nimport Reply from './Reply';\nimport ComposeTweet from './ComposeTweet';\nimport ron from './ron.jpg';\nimport Failure from './Failure';\n\nfunction App() {\n  const [tweets, setTweets] = useState([]);\n  const [detailView, setDetailView] = useState(null);\n  const [failMessage, setFailMessage] = useState('');\n  const [curSkip, setCurSkip] = useState(50);\n  const [fetchingMore, setFetchingMore] = useState(false);\n\n  useEffect(() => {\n    fetchTweets();\n  }, [setTweets]);\n\n  useEffect(() => {\n    const timer = (setTimeout(() => {\n      setFailMessage('');\n    }, 10000));\n    return () => clearTimeout(timer);\n  }, [failMessage, setFailMessage]);\n\n  useEffect(() => {\n    const handleScroll = async () => {\n      const position = window.pageYOffset;\n      const max = document.documentElement.offsetHeight;\n      if (position / max > .85 && !fetchingMore) {\n        setFetchingMore(true);\n        const result = await fetch('https://comp426-1fa20.cs.unc.edu/a09/tweets?' + new URLSearchParams({\n          skip: curSkip,\n        }), {\n          method: 'GET',\n          credentials: 'include',\n        });\n    \n        if (result.status !== 200) {\n          setFailMessage(`Could not fetch more tweets: ${result.status}`);\n          setFetchingMore(false);\n        } else {\n          const newTweets = await result.json();\n          setTweets(oldTweets => [...oldTweets, ...newTweets]);\n          setFetchingMore(false);\n          setCurSkip(curSkip+50);\n        }\n      }\n    }\n\n    window.addEventListener('scroll', handleScroll, { passive: true });\n    return () => {\n        window.removeEventListener('scroll', handleScroll);\n    };\n  }, [tweets, curSkip, fetchingMore, setTweets, setCurSkip, setFetchingMore]);\n\n  const resetDetailView = () => {\n    setDetailView(null);\n  }\n\n  const like = async (id) => {\n    const result = await fetch(`https://comp426-1fa20.cs.unc.edu/a09/tweets/${id}/like`, {\n      method: 'PUT',\n      credentials: 'include',\n    });\n    if (result.status !== 204)\n      setFailMessage(`Failed to like: ${result.status}`);\n  }\n\n  const unLike = async (id) => {\n    const result = await fetch(`https://comp426-1fa20.cs.unc.edu/a09/tweets/${id}/unlike`, {\n      method: 'PUT',\n      credentials: 'include',\n    });\n    if (result.status !== 204) \n      setFailMessage(`Failed to unlike: ${result.status}`);\n  }\n\n  const newTweet = () => {\n    setDetailView(\n      <div className=\"detailView\">\n        <ComposeTweet \n          defaultValue='' p\n          postHandler={postTweet} \n          cancelHandler={resetDetailView}\n          postMessage=\"Send It!\"\n        />\n      </div>\n    );\n  }\n\n  const postTweet = async (tweet) => {\n    const result = await fetch(`https://comp426-1fa20.cs.unc.edu/a09/tweets`, {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify({\n        body: tweet\n      })\n    });\n    if (result.status === 201) {\n      setDetailView(null);\n      fetchTweets();\n      window.scrollTo(0,0);\n      setCurSkip(50);\n    } else {\n      setFailMessage(`Failed to post: ${result.status}`);\n    }\n  }\n\n  const deleteTweet = async (id) => {\n    const result = await fetch(`https://comp426-1fa20.cs.unc.edu/a09/tweets/${id}`, {\n      method: 'DELETE',\n      credentials: 'include',\n    });\n    if (result.status === 204) {\n      setTweets(tweets.filter(t => t.id !== id));\n    } else setFailMessage(`Failed to delete: ${result.status}`);\n  }\n\n  const editTweet = (id, current) => {\n    setDetailView(\n      <div className=\"detailView\">\n        <ComposeTweet \n          defaultValue={current} \n          postHandler={(val) => postEdit(id, val)} \n          cancelHandler={resetDetailView}\n          postMessage=\"Edit!\"\n        />\n      </div>\n    );\n  }\n\n  const postEdit = async (id, content) => {\n    const result = await fetch(`https://comp426-1fa20.cs.unc.edu/a09/tweets/${id}`, {\n      method: 'PUT',\n      credentials: 'include',\n      body: JSON.stringify({\n        body: content\n      })\n    });\n\n    if (result.status === 200) {\n      setDetailView(null);\n      fetchTweets();\n    } else setFailMessage(`Failed to edit: ${result.status}`);\n  }\n\n  const postReply = async (id, content) => {\n    const result = await fetch(`https://comp426-1fa20.cs.unc.edu/a09/tweets`, {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify({\n        type: 'reply',\n        parent: id,\n        body: content,\n      })\n    });\n\n    if (result.status === 201) {\n      showReplies(id);\n    } else {\n      setFailMessage(`Failed to post reply: ${result.status}`);\n    }\n  }\n\n  const reply = async (id) => {\n    const result = await fetch(`https://comp426-1fa20.cs.unc.edu/a09/tweets/${id}`, {\n      method: 'GET',\n      credentials: 'include',\n    });\n    if (result.status !== 200) {\n      setFailMessage(`Could not find tweet: ${result.status}`);\n    } else {\n      const t = await result.json();\n\n      setDetailView(\n        <div className=\"detailView\">\n          <Tweet\n            key={t.id} \n            id={t.id}\n            body={t.body}\n            author={t.author}\n            type={t.type}\n            isMine={t.isMine}\n            isLiked={t.isLiked}\n            retweetCount={t.retweetCount}\n            retweetAuthor={t.type === \"retweet\" && !t.body && t.parent.author}\n            retweetBody={t.type === \"retweet\" && !t.body && t.parent.body}\n            parentId={t.parentId}\n            replyCount={t.replyCount}\n            likeCount={t.likeCount}\n            someLikes={t.someLikes}\n            createdAt={t.createdAt}\n            updatedAt={t.updatedAt}\n            showRepliesHandler={() => showReplies(t.id)}\n            likeHandler={() => like(t.id)}\n            unLikeHandler={() => unLike(t.id)}\n            deleteHandler={() => deleteTweet(t.id)}\n            editHandler={() => editTweet(t.id, t.body)}\n          />\n          <ComposeTweet \n            type=\"reply\"\n            defaultValue={''} \n            postHandler={(val) => postReply(id, val)} \n            cancelHandler={resetDetailView}\n            postMessage=\"Reply!\"\n            replyTo={t.author}\n          />\n        </div>\n      );\n    }\n  }\n\n  const postRetweet = async (id, content) => {\n    const result = await fetch(`https://comp426-1fa20.cs.unc.edu/a09/tweets`, {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify({\n        type: 'retweet',\n        parent: id,\n        body: content,\n      })\n    });\n    if (result.status === 201) {\n      setDetailView(null);\n      fetchTweets();\n      window.scrollTo(0,0);\n      setCurSkip(50);\n    } else {\n      setFailMessage(`Failed to retweet: ${result.status}`);\n    }\n  }\n\n  const retweet = async (id) => {\n    const result = await fetch(`https://comp426-1fa20.cs.unc.edu/a09/tweets/${id}`, {\n      method: 'GET',\n      credentials: 'include',\n    });\n\n    if (result.status !== 200) {\n      setFailMessage(`Could not find tweet: ${result.status}`);\n    } else {\n      const t = await result.json();\n\n\n      setDetailView(\n        <div className=\"detailView\">\n          <ComposeTweet \n            type=\"retweet\"\n            defaultValue=''\n            postHandler={(val) => postRetweet(id, val)}\n            cancelHandler={resetDetailView}\n            postMessage=\"Retweet!\"\n            replyTo={t.author}\n            retweetAuthor={t.author}\n            retweetBody={t.body}\n          />\n        </div>\n      );\n    }\n  }\n\n  const fetchTweets = async () => {\n    const result = await fetch('https://comp426-1fa20.cs.unc.edu/a09/tweets', {\n      method: 'GET',\n      credentials: 'include',\n    });\n\n    if (result.status !== 200) {\n      setFailMessage(`Could not fetch tweets: ${result.status}`);\n    } else setTweets(await result.json());\n  }\n\n  const showReplies = async (id) => {\n    const result = await fetch(`https://comp426-1fa20.cs.unc.edu/a09/tweets/${id}`, {\n      method: 'GET',\n      credentials: 'include',\n    });\n\n    if (result.status !== 200) {\n      setFailMessage(`Could not find tweet: ${result.status}`);\n    } else {\n      const t = await result.json();\n\n      setDetailView(\n        <div className=\"detailView\">\n          <Tweet\n            key={t.id} \n            id={t.id}\n            body={t.body}\n            author={t.author}\n            type={t.type}\n            isMine={t.isMine}\n            isLiked={t.isLiked}\n            retweetCount={t.retweetCount}\n            retweetAuthor={t.type === \"retweet\" && !t.body && t.parent.author}\n            retweetBody={t.type === \"retweet\" && !t.body && t.parent.body}\n            parentId={t.parentId}\n            replyCount={t.replyCount}\n            likeCount={t.likeCount}\n            someLikes={t.someLikes}\n            createdAt={t.createdAt}\n            updatedAt={t.updatedAt}\n            showRepliesHandler={() => showReplies(t.id)}\n            likeHandler={() => like(t.id)}\n            unLikeHandler={() => unLike(t.id)}\n            deleteHandler={() => deleteTweet(t.id)}\n            editHandler={() => editTweet(t.id, t.body)}\n            replyHandler={() => reply(t.id)}\n            retweetHandler={() => retweet(t.id)}\n          />\n          {t.replies && t.replies.sort((a,b) => a.createdAt-b.createdAt).map(r => (\n            <Reply \n              key={r.id}\n              body={r.body}\n              author={r.author}\n              type={r.type}\n              isMine={r.isMine}\n              isLiked={r.isLiked}\n              retweetCount={r.retweetCount}\n              parentId={r.parentId}\n              replyCount={r.replyCount}\n              likeCount={r.likeCount}\n              someLikes={r.someLikes}\n              createdAt={r.createdAt}\n              updatedAt={r.updatedAt}\n              showRepliesHandler={() => showReplies(r.id)}\n              showParentReplies={() => showReplies(t.id)}\n              likeHandler={() => like(r.id)}\n              unLikeHandler={() => unLike(r.id)}\n              deleteHandler={() => deleteTweet(r.id)}\n              editHandler={() => editTweet(r.id, r.body)}\n              replyHandler={() => reply(r.id)}\n              retweetHandler={() => retweet(r.id)}\n            />\n          ))}\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1 onClick={() => {setDetailView(null); setTweets([]); fetchTweets();}}>Ron Howard Thoughts</h1>\n        <div>\n          <button onClick={newTweet}>New Tweet</button>\n          <img src={ron} className=\"pfp\" alt=\"ron\"></img>\n        </div>\n      </header>\n      <div className=\"body\">\n        <div className=\"feed\">\n          {tweets.filter(t => t.type === 'tweet' || t.type === 'retweet').map(t => (\n          <Tweet \n            key={t.id}\n            id={t.id}\n            body={t.body}\n            author={t.author}\n            type={t.type}\n            isMine={t.isMine}\n            isLiked={t.isLiked}\n            retweetCount={t.retweetCount}\n            retweetAuthor={t.type === \"retweet\" && t.parent && t.parent.author}\n            retweetBody={t.type === \"retweet\" && t.parent && t.parent.body}\n            parentId={t.parentId}\n            replyCount={t.replyCount}\n            likeCount={t.likeCount}\n            someLikes={t.someLikes}\n            createdAt={t.createdAt}\n            updatedAt={t.updatedAt}\n            showRepliesHandler={() => showReplies(t.id)}\n            likeHandler={() => like(t.id)}\n            unLikeHandler={() => unLike(t.id)}\n            deleteHandler={() => deleteTweet(t.id)}\n            editHandler={() => editTweet(t.id, t.body)}\n            replyHandler={() => reply(t.id)}\n            retweetHandler={() => retweet(t.id)}\n          ></Tweet>\n          ))}\n        </div>\n      {detailView}\n      {failMessage && <Failure failMessage={failMessage} />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}